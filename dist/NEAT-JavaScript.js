!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.NEATJavaScript=t():e.NEATJavaScript=t()}(self,(()=>{return e={34:(e,t,n)=>{const i=n(691);e.exports=class extends i{calculateFitness(e){const t=[[0,0],[0,1],[1,0],[1,1]],n=[0,1,1,0];let i=0;for(let o=0;o<t.length;o++){const s=t[o],a=e.propagate(s);i+=Math.pow(a[0]-n[o],2)}return 1/(1+i)}}},36:e=>{e.exports=class{constructor(e,t){this.id=e,this.config=t,this.lastOutput=0,this.expectedInputs=0,this.receivedInputs=0}resetState(){this.lastOutput=0,this.expectedInputs=0,this.receivedInputs=0}acceptsIncomingConnections(){return!1}acceptsOutgoingConnections(){return!1}}},44:(e,t,n)=>{const i=n(117),o=n(846),s=n(633),a=n(149),c=n(871),r=n(602),h=n(697),d=n(128),u=n(559),p=n(725),l=n(904),g=n(546),f=n(580),m=n(797),N=n(856),I=n(349),b=n(729),v=n(36),w=n(589),G=n(804),C=n(405),M=n(717),x=n(130),T=n(691),k=n(34),y=n(209),E=n(140),O=n(226),F=n(687),S=n(194),R=n(165),z=n(632),A=n(897),B=n(454);e.exports={ActivationFunction:i,Gaussian:o,LeakyReLU:s,NEATSigmoid:a,ReLU:c,SELU:r,Sigmoid:h,Tanh:d,Algorithm:u,Config:p,ConnectionGene:l,ConnectionGeneData:g,GeneticEncoding:f,NodeGeneData:m,BiasNode:N,HiddenNode:I,InputNode:b,NodeGene:v,NodeType:w,OutputNode:G,Genome:C,Population:M,Species:x,FitnessFunction:T,XOR:k,InnovationTracker:O,ConfigTracker:y,GenomeTracker:E,NodeTracker:F,PopulationTracker:S,StaticManager:z,WeightInitialization:A,RandomWeightInitialization:B,GenomeBuilder:R}},117:e=>{e.exports=class{apply(e){throw new Error("Apply has to be implemented by a subclass")}}},128:(e,t,n)=>{const i=n(117);e.exports=class extends i{apply(e){return Math.tanh(e)}}},130:e=>{e.exports=class{constructor(e,t){this.id=e,this.config=t,this.bestFitness=0,this.generationsSinceImprovement=0,this.stagnated=!1,this.genomes=[],this.representative=null,this.offspringCount=0}addGenome(e){0===this.genomes.length&&(this.representative=e),this.genomes.push(e)}setAdjustedFitness(){for(const e of this.genomes)e.adjustedFitness=e.fitness/this.genomes.length}removeBadGenomes(){this.genomes.sort(((e,t)=>t.fitness-e.fitness));const e=this.genomes.length,t=Math.max(1,Math.floor(e*this.config.survivalRate));this.genomes.length>t&&this.genomes.splice(t,this.genomes.length-t)}updateFitnessAndStagnation(){let e=this.getBestGenome().fitness;e>this.bestFitness?(this.bestFitness=e,this.generationsSinceImprovement=0):this.generationsSinceImprovement++,this.generationsSinceImprovement>this.config.dropoffAge&&(this.stagnated=!0)}getTotalAdjustedFitness(){let e=0;for(const t of this.genomes)e+=t.adjustedFitness;return e}getBestGenome(){let e=this.genomes[0];for(const t of this.genomes)t.fitness>e.fitness&&(e=t);return e}setRandomRepresentative(){0===this.genomes.length?this.representative=null:this.representative=this.genomes[Math.floor(Math.random()*this.genomes.length)]}}},140:e=>{e.exports=class{constructor(){this.genomeId=0}getNextGenomeId(){return this.genomeId++}}},149:(e,t,n)=>{const i=n(117);e.exports=class extends i{constructor(e=4.9){super(),this.steepness=e}apply(e){return 1/(1+Math.exp(-this.steepness*e))}}},165:(e,t,n)=>{const i=n(632),o=n(194),s=n(405),a=n(729),c=n(349),r=n(804),h=n(856),d=n(904);e.exports=class{static buildGenome(e,t=o.getNextPopulationId()){let n=e.inputSize,c=e.outputSize,u=[],p=[];for(let o=0;o<n;o++)u.push(new a(i.getNodeTracker(t).getNextNodeId(),e));for(let n=0;n<c;n++)u.push(new r(i.getNodeTracker(t).getNextNodeId(),e));let l=null;"DISABLED"!==e.biasMode&&"CONSTANT"!==e.biasMode&&(l=new h(i.getNodeTracker(t).getNextNodeId(),e),u.push(l));for(let o=0;o<n;o++){let s=u[o];for(let o=n;o<n+c;o++){let n=u[o],a=i.getInnovationTracker(t).trackInnovation(s.id,n.id);p.push(new d(s,n,e.weightInitialization.initializeWeight(),!0,a.innovationNumber,!1,e))}}if(e.connectBias&&"DISABLED"!==e.biasMode&&"CONSTANT"!==e.biasMode)for(let o=n;o<n+c;o++){let n=u[o],s=i.getInnovationTracker(t).trackInnovation(l.id,n.id);p.push(new d(l,n,e.weightInitialization.initializeWeight(),!0,s.innovationNumber,!1,e))}return new s(u,p,e,t)}static loadGenome(e,t){const n=JSON.parse(e),i=[];n.nodeGenes.forEach((e=>{let n;switch(e.type){case"INPUT":n=new a(e.id,t);break;case"HIDDEN":n=new c(e.id,t);break;case"OUTPUT":n=new r(e.id,t);break;case"BIAS":n=new h(e.id,t);break;default:throw new Error(`Unknown node type: ${e.type}`)}i.push(n)}));const o=[];n.connectionGenes.forEach((e=>{const n=i.find((t=>t.id===e.inNodeId)),s=i.find((t=>t.id===e.outNodeId));if(!n||!s)throw new Error("Connection refers to a non-existing node");const a=new d(n,s,e.weight,e.enabled,e.innovationNumber,e.recurrent,t);o.push(a)}));const u=new s(i,o,t,n.populationId);return u.fitness=n.fitness,u}}},194:e=>{e.exports=class{static#e=0;static getNextPopulationId(){return this.#e++}}},209:e=>{e.exports=class{static#t=0;static getNextConfigId(){return this.#t++}}},226:(e,t,n)=>{const i=n(632);class o{static InnovationType=Object.freeze({addConnection:"addConnection",addNode:"addNode"});constructor(){this.innovationMap=new Map,this.innovationCounter=0}reset(){this.innovationMap.clear()}trackInnovation(e,t){const n=this.generateMutationKey(o.InnovationType.addConnection,e,t);if(this.innovationMap.has(n))return this.innovationMap.get(n);{const i={inNodeId:e,outNodeId:t,innovationNumber:this.innovationCounter};return this.innovationMap.set(n,i),this.innovationCounter++,i}}trackAddNodeInnovation(e,t){const n=i.getNodeTracker(t),s=this.generateMutationKey(o.InnovationType.addNode,e.inNode.id,e.outNode.id);let a=null;this.innovationMap.has(s)?a=this.innovationMap.get(s):(a=n.getNextNodeId(),this.innovationMap.set(s,a));const c=e.inNode.id,r=e.outNode.id;return{inToNew:this.trackInnovation(c,a),newToOut:this.trackInnovation(a,r),newNodeId:a}}generateMutationKey(e,t,n){return`${e}-${t}-${n}`}}e.exports=o},349:(e,t,n)=>{const i=n(36),o=n(856),s=n(589);e.exports=class extends i{constructor(e,t){super(e,t),this.nodeType=s.HIDDEN,this.activationFunction=t.activationFunction,this.incomingConnections=[],this.outgoingConnections=[],this.inComingRecurrentConnections=[],this.biasConnection=null,this.inputs=[]}feedInput(e){this.inputs.push(e),this.receivedInputs++,this.receivedInputs===this.expectedInputs&&this.activate(this.inputs)}activate(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];for(const e of this.inComingRecurrentConnections)e.enabled&&(t+=e.inNode.lastOutput*e.weight);switch(this.config.biasMode){case"WEIGHTED_NODE":null!==this.biasConnection&&this.biasConnection.enabled&&(t+=this.biasConnection.weight*this.biasConnection.inNode.bias);break;case"DIRECT_NODE":null!==this.biasConnection&&this.biasConnection.enabled&&(t+=this.biasConnection.inNode.bias);break;case"CONSTANT":t+=this.config.bias}const n=this.activationFunction.apply(t);this.lastOutput=n;for(const e of this.outgoingConnections)e.feedForward(n);this.inputs=[],this.receivedInputs=0}forwardExpectedInput(){this.expectedInputs++;for(const e of this.outgoingConnections)e.enabled&&!e.recurrent&&e.forwardExpectedInput()}addIncomingConnection(e){this.incomingConnections.push(e),e.recurrent&&this.inComingRecurrentConnections.push(e),e.inNode instanceof o&&(this.biasConnection=e)}addOutgoingConnection(e){this.outgoingConnections.push(e)}acceptsIncomingConnections(){return!0}acceptsOutgoingConnections(){return!0}}},405:(e,t,n)=>{const i=n(729),o=n(349),s=n(856),a=n(804),c=n(904),r=n(632),h=n(580);class d{constructor(e,t,n,o){this.nodeGenes=e,this.connectionGenes=t,this.inputNodes=e.filter((e=>e instanceof i)),this.outputNodes=e.filter((e=>e instanceof a)),this.biasNode=e.find((e=>e instanceof s))||null,this.config=n,this.genomeTracker=r.getGenomeTracker(o),this.nodeTracker=r.getNodeTracker(o),this.innovationTracker=r.getInnovationTracker(o),this.id=this.genomeTracker.getNextGenomeId(),this.fitness=0,this.adjustedFitness=0,this.populationId=o}propagate(e){this.calculateExpectedInputs();for(let t=0;t<e.length;t++)this.getNodeById(t).feedInput(e[t]);let t=new Array(this.outputNodes.length);for(let e=0;e<this.outputNodes.length;e++){let n=this.getNodeById(e+this.inputNodes.length);t[e]=n.lastOutput}return t}resetState(){for(const e of this.nodeGenes)e.resetState()}calculateExpectedInputs(){for(const e of this.nodeGenes)e.expectedInputs=0,e.receivedInputs=0;for(const e of this.connectionGenes)e.forwardedExpectedInput=!1;for(const e of this.inputNodes)e.calculateExpectedInputs()}getNodeById(e){return this.nodeGenes.find((t=>t.id===e))||null}mutate(){const e=this.config.weightMutationRate,t=this.config.addConnectionMutationRate,n=this.config.addNodeMutationRate;Math.random()<e&&this.mutateWeights(),Math.random()<t&&this.mutateAddConnection(),Math.random()<n&&this.mutateAddNode()}mutateWeights(){const e=this.config.minWeight,t=this.config.maxWeight;for(const n of this.connectionGenes)if(Math.random()<this.config.reinitializeWeightRate)n.reinitializeWeight();else{let i=n.weight+(this.config.minPerturb+(this.config.maxPerturb-this.config.minPerturb)*Math.random());i=Math.max(e,Math.min(i,t)),n.weight=i}}mutateAddConnection(){let e,t,n=0;for(;n<100;){if(e=this.nodeGenes[Math.floor(Math.random()*this.nodeGenes.length)],t=this.nodeGenes[Math.floor(Math.random()*this.nodeGenes.length)],!e.acceptsOutgoingConnections()||!t.acceptsIncomingConnections()){n++;continue}let i=!1;for(let n of this.connectionGenes)if(n.inNode===e&&n.outNode===t){i=!0;break}if(i){n++;continue}let o=this.checkIfRecurrent(e,t),s=this.config.recurrentConnectionRate,a=this.config.allowRecurrentConnections;if(o&&(!a||Math.random()>s)){n++;continue}const r=this.innovationTracker.trackInnovation(e.id,t.id),h=new c(e,t,this.config.weightInitialization.initializeWeight(),!0,r.innovationNumber,o,this.config);if(this.connectionGenes.push(h),h.recurrent!==this.checkIfRecurrent(h.inNode,h.outNode))throw new Error("recurrent is not the same");break}}mutateAddNode(){if(this.connectionGenes.length<1)return;let e=null,t=0;for(;t<100;){let n=this.connectionGenes[Math.floor(Math.random()*this.connectionGenes.length)];if(n.enabled){e=n;break}t++}if(null===e)return;e.enabled=!1;const n=this.innovationTracker.trackAddNodeInnovation(e,this.populationId);let i=new o(n.newNodeId,this.config);this.nodeGenes.push(i);let s=new c(e.inNode,i,1,!0,n.inToNew.innovationNumber,!1,this.config),a=new c(i,e.outNode,e.weight,!0,n.newToOut.innovationNumber,e.recurrent,this.config);this.connectionGenes.push(s),this.connectionGenes.push(a)}checkIfRecurrent(e,t){let n=!1;if(e===t)return n=!0,n;if(e instanceof a)return n=!0,n;let i=[],o=new Set;for(i.push(t);i.length>0;){let t=i.pop();if(t===e)return n=!0,n;if(t.acceptsOutgoingConnections()){o.add(t);for(let e of t.outgoingConnections){let t=e.outNode;e.recurrent||o.has(t)||i.push(t)}}}return n}checkForRecurrentConnections(){this.connectionGenes.forEach((e=>{e.recurrent=this.checkIfRecurrent(e.inNode,e.outNode)}))}reinitializeWeights(){for(const e of this.connectionGenes)e.reinitializeWeight()}copy(){const e=[],t=[],n={};return this.nodeGenes.forEach((t=>{let c=null;t instanceof i?c=new i(t.id,this.config):t instanceof o?c=new o(t.id,this.config):t instanceof a?c=new a(t.id,this.config):t instanceof s&&(c=new s(t.id,this.config)),null!==c&&(e.push(c),n[c.id]=c)})),this.connectionGenes.forEach((e=>{const i=e.inNode,o=e.outNode,s=n[i.id],a=n[o.id];if(s&&a){const n=new c(s,a,e.weight,e.enabled,e.innovationNumber,e.recurrent,this.config);t.push(n)}})),new d(e,t,this.config,this.populationId)}equalsGenome(e){if(this.nodeGenes.length!==e.nodeGenes.length||this.connectionGenes.length!==e.connectionGenes.length)return!1;for(let t=0;t<this.connectionGenes.length;t++)if(this.connectionGenes[t].weight!==e.connectionGenes[t].weight)return!1;return!0}getGeneticEncoding(){const e=new h(this.config,this.populationId);return e.loadGenome(this),e}crossover(e){const t=this.getGeneticEncoding(),n=e.getGeneticEncoding();return t.crossover(n).buildGenome()}evaluateFitness(){this.fitness=this.config.fitnessFunction.calculateFitness(this)}toJSON(){const e={id:this.id,nodeGenes:this.nodeGenes.map((e=>({id:e.id,type:e.nodeType}))),connectionGenes:this.connectionGenes.map((e=>({innovationNumber:e.innovationNumber,inNodeId:e.inNode.id,outNodeId:e.outNode.id,enabled:e.enabled,weight:e.weight,recurrent:e.recurrent}))),fitness:this.fitness,populationId:this.populationId};return JSON.stringify(e,null,2)}prune(e=!1){if(e){const e=this.connectionGenes.filter((e=>!e.enabled));for(const t of e){const e=t.inNode,n=t.outNode,i=e.outgoingConnections.indexOf(t);-1!==i&&e.outgoingConnections.splice(i,1);const o=n.incomingConnections.indexOf(t);if(-1!==o&&n.incomingConnections.splice(o,1),t.recurrent&&n.inComingRecurrentConnections){const e=n.inComingRecurrentConnections.indexOf(t);-1!==e&&n.inComingRecurrentConnections.splice(e,1)}n.biasConnection===t&&(n.biasConnection=null)}this.connectionGenes=this.connectionGenes.filter((e=>e.enabled))}let t=!0;for(;t;){t=!1;for(let e=0;e<this.nodeGenes.length;e++){const n=this.nodeGenes[e];if(!(n instanceof o))continue;const i=n.incomingConnections,s=n.outgoingConnections;if(0===i.length){for(const e of s){const t=e.outNode,n=t.incomingConnections.indexOf(e);if(-1!==n&&t.incomingConnections.splice(n,1),e.recurrent&&t.inComingRecurrentConnections){const n=t.inComingRecurrentConnections.indexOf(e);-1!==n&&t.inComingRecurrentConnections.splice(n,1)}t.biasConnection===e&&(t.biasConnection=null)}this.connectionGenes=this.connectionGenes.filter((e=>!s.includes(e))),this.nodeGenes.splice(e,1),t=!0,e--}else if(0===s.length){for(const e of i){const t=e.inNode,n=t.outgoingConnections.indexOf(e);-1!==n&&t.outgoingConnections.splice(n,1)}this.connectionGenes=this.connectionGenes.filter((e=>!i.includes(e))),this.nodeGenes.splice(e,1),t=!0,e--}}}}}e.exports=d},454:(e,t,n)=>{const i=n(897);e.exports=class extends i{constructor(e,t){super(),this.min=e,this.max=t}initializeWeight(){return this.min+(this.max-this.min)*Math.random()}initializeWeights(e){const t=[];for(let n=0;n<e;n++)t.push(this.initializeWeight());return t}}},546:e=>{e.exports=class{constructor(e,t,n,i,o,s){this.inNodeId=e,this.outNodeId=t,this.weight=n,this.enabled=i,this.innovationNumber=o,this.recurrent=s}}},559:(e,t,n)=>{const i=n(717);e.exports=class{constructor(e){this.config=e,this.population=new i(e)}run(){this.population.evaluatePopulation();for(let e=0;e<this.config.generations;e++){this.population.evolve(),this.population.evaluatePopulation();let e=this.population.getBestGenome().fitness;if(console.log("Generation: "+this.population.generation+" best fitness: "+e),e>=this.config.targetFitness){console.log("Target fitness reached");break}}}}},580:(e,t,n)=>{const i=n(546),o=n(797),s=n(729),a=n(349),c=n(804),r=n(856),h=n(904),d=n(589);class u{constructor(e,t){this.config=e,this.nodeGenesMap=new Map,this.connectionGenesMap=new Map,this.inputNodes=[],this.outputNodes=[],this.biasNode=null,this.fitness=0,this.populationId=t}loadGenome(e){this.nodeGenesMap.clear(),this.connectionGenesMap.clear();for(const t of e.connectionGenes)this.connectionGenesMap.set(t.innovationNumber,new i(t.inNode.id,t.outNode.id,t.weight,t.enabled,t.innovationNumber,t.recurrent));for(const t of e.nodeGenes)this.nodeGenesMap.set(t.id,new o(t.id,t.nodeType)),t instanceof s?this.inputNodes.push(new o(t.id,t.nodeType)):t instanceof c?this.outputNodes.push(new o(t.id,t.nodeType)):t instanceof r&&(this.biasNode=new o(t.id,t.nodeType));this.fitness=e.fitness}crossover(e){let t=new u(this.config,this.populationId),n=this.fitness,i=e.fitness,o=null,s=null;n>i?(o=this,s=e):i>n?(o=e,s=this):n===i&&(o=this.connectionGenesMap.size<e.connectionGenesMap.size?this:e,s=this.connectionGenesMap.size<e.connectionGenesMap.size?e:this);for(const[e,n]of o.connectionGenesMap)if(s.hasInnovationNumber(e)){let i=s.getConnectionByInnovationNumber(e),a=Math.random()<.5?o:s,c=a.getConnectionByInnovationNumber(e),r=!(!n.enabled||!i.enabled)||Math.random()>this.config.keepDisabledOnCrossOverRate;-1===this.config.keepDisabledOnCrossOverRate&&(r=c.enabled),t.addConnectionAndNodes(c,r,a,o)}else{let e=!!n.enabled||Math.random()>this.config.keepDisabledOnCrossOverRate;-1===this.config.keepDisabledOnCrossOverRate&&(e=n.enabled),t.addConnectionAndNodes(n,e,o,o)}for(const e of this.inputNodes)t.addNode(e);for(const e of this.outputNodes)t.addNode(e);return null!==this.biasNode&&t.addNode(this.biasNode),t}calculateCompatibilityDistance(e){const t=this.getNumberOfDisjointGenes(e),n=this.getNumberOfExcessGenes(e);let i=Math.max(this.connectionGenesMap.size,e.connectionGenesMap.size);return i=i<20?1:i,this.config.c1*n/i+this.config.c2*t/i+this.config.c3*this.calculateAverageWeightDifference(e)}getNumberOfMatchingGenes(e){let t=0;for(const n of this.connectionGenesMap.keys())e.hasInnovationNumber(n)&&t++;return t}getNumberOfDisjointGenes(e){let t=0;const n=this.getHighestInnovationNumber(),i=e.getHighestInnovationNumber(),o=Math.min(n,i);for(const n of this.connectionGenesMap.keys())n<=o&&!e.hasInnovationNumber(n)&&t++;for(const n of e.connectionGenesMap.keys())n<=o&&!this.hasInnovationNumber(n)&&t++;return t}getNumberOfExcessGenes(e){let t=0;const n=this.getHighestInnovationNumber(),i=e.getHighestInnovationNumber(),o=n>i?this:e,s=Math.min(n,i);for(const e of o.connectionGenesMap.keys())e>s&&t++;return t}calculateAverageWeightDifference(e){let t=0,n=0;for(const[i,o]of this.connectionGenesMap)if(e.hasInnovationNumber(i)){let s=e.getConnectionByInnovationNumber(i);t+=Math.abs(o.weight-s.weight),n++}return 0===n?0:t/n}buildGenome(){const e=n(405);let t=new Map,i=[];for(const e of this.nodeGenesMap.values()){let n=null;switch(e.nodeType){case d.INPUT:n=new s(e.id,this.config);break;case d.HIDDEN:n=new a(e.id,this.config);break;case d.OUTPUT:n=new c(e.id,this.config);break;case d.BIAS:n=new r(e.id,this.config)}null!==n&&(t.set(n.id,n),i.push(n))}let o=[];for(const e of this.connectionGenesMap.values()){const n=t.get(e.inNodeId),i=t.get(e.outNodeId),s=new h(n,i,e.weight,e.enabled,e.innovationNumber,e.recurrent,this.config);o.push(s)}const u=new e(i,o,this.config,this.populationId);return u.checkForRecurrentConnections(),u}addConnectionAndNodes(e,t,n,s){if(n.getNodeById(e.outNodeId).nodeType===d.INPUT)throw new Error(`Invalid connection: Input node ${e.outNodeId} cannot be used as out node.`);let a=s.getConnectionByInnovationNumber(e.innovationNumber),c=new i(e.inNodeId,e.outNodeId,e.weight,t,e.innovationNumber,a.recurrent);this.addConnection(c);let r=new o(e.inNodeId,n.getNodeById(e.inNodeId).nodeType),h=new o(e.outNodeId,n.getNodeById(e.outNodeId).nodeType);this.addNode(r),this.addNode(h)}getHighestInnovationNumber(){return Math.max(...Array.from(this.connectionGenesMap.keys()),0)}hasInnovationNumber(e){return this.connectionGenesMap.has(e)}getNodeById(e){if(!this.nodeGenesMap.has(e))throw new Error(`Error: Node with ID ${e} does not exist.`);return this.nodeGenesMap.get(e)}getConnectionByInnovationNumber(e){return this.connectionGenesMap.get(e)}addConnection(e){for(let t of this.connectionGenesMap.values())if(t.inNodeId===e.inNodeId&&t.outNodeId===e.outNodeId)return;this.connectionGenesMap.set(e.innovationNumber,e)}hasNodeId(e){return this.nodeGenesMap.has(e)}addNode(e){if(!this.nodeGenesMap.has(e.id))switch(this.nodeGenesMap.set(e.id,e),e.nodeType){case"INPUT":this.inputNodes.push(e);break;case"OUTPUT":this.outputNodes.push(e);break;case"BIAS":this.biasNode=e}}}e.exports=u},589:e=>{const t=Object.freeze({INPUT:"INPUT",OUTPUT:"OUTPUT",HIDDEN:"HIDDEN",BIAS:"BIAS"});e.exports=t},602:(e,t,n)=>{const i=n(117);e.exports=class extends i{constructor(){super(),this.alpha=1.6732632423543772,this.scale=1.0507009873554805}apply(e){return this.scale*(e>0?e:this.alpha*(Math.exp(e)-1))}}},632:(e,t,n)=>{const i=n(140),o=n(687);class s{constructor(){return s.instance||(s.instance=this,this.innovationTrackerMap=new Map,this.genomeTrackerMap=new Map,this.nodeTrackerMap=new Map),s.instance}getInnovationTracker(e){if(this.innovationTrackerMap.has(e))return this.innovationTrackerMap.get(e);{const t=new(n(226));return this.innovationTrackerMap.set(e,t),t}}getGenomeTracker(e){if(this.genomeTrackerMap.has(e))return this.genomeTrackerMap.get(e);{const t=new i;return this.genomeTrackerMap.set(e,t),t}}getNodeTracker(e){if(this.nodeTrackerMap.has(e))return this.nodeTrackerMap.get(e);{const t=new o;return this.nodeTrackerMap.set(e,t),t}}}e.exports=new s},633:(e,t,n)=>{const i=n(117);e.exports=class extends i{constructor(e=.01){super(),this.alpha=e}apply(e){return e>0?e:this.alpha*e}}},687:e=>{e.exports=class{constructor(){this.nodeId=0}getNextNodeId(){return this.nodeId++}}},691:e=>{e.exports=class{calculateFitness(e){throw new Error("calculateFitness(genome) must be implemented by subclass")}}},697:(e,t,n)=>{const i=n(117);e.exports=class extends i{apply(e){return 1/(1+Math.exp(-e))}}},717:(e,t,n)=>{const i=n(165),o=n(632),s=n(194),a=n(130);e.exports=class{constructor(e){this.genomes=[],this.species=[],this.eliteGenomes=[],this.newGeneration=[],this.config=e,this.allStagnated=!1,this.stale=!1,this.populationId=s.getNextPopulationId(),this.innovationTracker=o.getInnovationTracker(this.populationId),this.generation=0,this.speciesCounter=0,this.bestFitness=0,this.ageSinceLastImprovement=0,this.speciated=!1;let t=i.buildGenome(e,this.populationId);for(let n=0;n<e.populationSize;n++)this.genomes.push(t.copy());for(const e of this.genomes)e.reinitializeWeights()}speciate(){for(let e of this.species)e.genomes=[];for(const e of this.genomes){let t=!1;for(const n of this.species){let i=n.representative;if(null!==i&&e.getGeneticEncoding().calculateCompatibilityDistance(i.getGeneticEncoding())<this.config.compatibilityThreshold){n.addGenome(e),t=!0;break}}if(!t){let t=new a(this.speciesCounter++,this.config);t.addGenome(e),this.species.push(t)}this.species=this.species.filter((e=>e.genomes.length>0)),this.species.forEach((e=>e.setRandomRepresentative()))}this.speciated=!0}evolve(){this.stale=!1,this.allStagnated=!1,this.newGeneration=[],this.eliteGenomes=[],this.speciated||this.speciate(),this.innovationTracker.reset(),this.saveEliteGenomes(),this.handleStagnation(),this.removeWorstGenomes(),this.calculateOffspring(),this.generateOffspring(),this.putBackElite(),this.genomes=[],this.genomes.push(...this.newGeneration),this.generation++,this.speciated=!1}evaluatePopulation(){for(const e of this.genomes)e.evaluateFitness()}saveEliteGenomes(){this.genomes.sort(((e,t)=>t.fitness-e.fitness)),this.eliteGenomes=[];for(const e of this.species)e.genomes.length>5&&this.eliteGenomes.push(e.getBestGenome().copy());let e=0;for(;this.eliteGenomes.length<this.config.numOfElite&&e<this.genomes.length;){const t=this.genomes[e];let n=this.eliteGenomes.some((e=>e.equalsGenome(t)));for(let e of this.eliteGenomes)e===t&&(n=!0),e.equalsGenome(t)&&(n=!0);n||this.eliteGenomes.push(t.copy()),e++}}handleStagnation(){this.updateFitnessAndStagnation();for(const e of this.species)e.updateFitnessAndStagnation();let e=!0;for(const t of this.species)if(!t.stagnated){e=!1;break}this.allStagnated=e,this.removeStale()}updateFitnessAndStagnation(){let e=this.getBestGenome().fitness;e>this.bestFitness?(this.bestFitness=e,this.ageSinceLastImprovement=0):this.ageSinceLastImprovement++,this.ageSinceLastImprovement>this.config.populationStagnationLimit&&(this.stale=!0)}removeStale(){if(this.species.sort(((e,t)=>t.getBestGenome().fitness-e.getBestGenome().fitness)),this.stale)this.species.length>3&&this.species.splice(2);else if(this.allStagnated)this.species.length>2&&this.species.splice(1);else for(let e=this.species.length-1;e>=0;e--)this.species[e].stagnated&&this.species.splice(e,1)}getBestGenome(){let e=this.genomes[0];for(const t of this.genomes)t.fitness>e.fitness&&(e=t);return e}removeWorstGenomes(){for(const e of this.species)e.removeBadGenomes()}calculateOffspring(){const e=this.config.populationSize-this.eliteGenomes.length;let t=0;this.species.forEach((e=>{e.setAdjustedFitness(),t+=e.getTotalAdjustedFitness()}));const n=this.species.map((e=>e.getTotalAdjustedFitness()/t*100));this.species.forEach(((t,i)=>{const o=Math.floor(n[i]/100*e);t.offspringCount=o}));let i=this.species.reduce(((e,t)=>e+t.offspringCount),0);if(i>e){const t=i-e;let n=this.species[0];this.species.forEach((e=>{e.getTotalAdjustedFitness()<n.getTotalAdjustedFitness()&&(n=e)})),n.offspringCount-=t}if(i<e){const t=e-i;for(let e=0;e<t;e++)this.selectBestSpecies().offspringCount++}}selectBestSpecies(){let e=this.species[0];for(const t of this.species)t.bestFitness>e.bestFitness&&(e=t);return e}generateOffspring(){this.species.forEach((e=>{const t=e.offspringCount,n=[];for(let i=0;i<t;i++){const t=e.genomes.length;if(Math.random()<this.config.mutateOnlyProb){let o=e.genomes[Math.floor(Math.random()*t)];for(;t>1&&n.includes(o)&&i<t;)o=e.genomes[Math.floor(Math.random()*t)];n.push(o);const s=o.copy();s.mutate(),this.newGeneration.push(s);continue}if(Math.random()<this.config.interspeciesMatingRate&&this.species.length>1){let t=this.species[Math.floor(Math.random()*this.species.length)];for(;t===e;)t=this.species[Math.floor(Math.random()*this.species.length)];const n=e.genomes[Math.floor(Math.random()*e.genomes.length)],i=t.genomes[Math.floor(Math.random()*t.genomes.length)];let o=n.crossover(i);Math.random()<=this.config.mutationRate&&o.mutate(),this.newGeneration.push(o);continue}let o;if(e.genomes.length>1){let t,n,i=!1;for(;!i;)t=e.genomes[Math.floor(Math.random()*e.genomes.length)],n=e.genomes[Math.floor(Math.random()*e.genomes.length)],t!==n&&(i=!0);o=t.crossover(n),Math.random()<=this.config.mutationRate&&o.mutate()}else o=e.genomes[0].copy(),o.mutate();this.newGeneration.push(o)}}))}putBackElite(){for(const e of this.eliteGenomes)this.newGeneration.push(e)}}},725:(e,t,n)=>{const i=n(697),o=n(149),s=n(128),a=n(871),c=n(633),r=n(846),h=n(454),d=n(34),u={Sigmoid:i,Tanh:s,ReLU:a,LeakyReLU:c,Gaussian:r,NEATSigmoid:o},p={Random:h},l={XOR:d};e.exports=class{constructor(e={}){const t={inputSize:2,outputSize:1,activationFunction:"Sigmoid",bias:1,connectBias:!0,biasMode:"WEIGHTED_NODE",allowRecurrentConnections:!0,recurrentConnectionRate:1,minWeight:-4,maxWeight:4,weightInitialization:{type:"Random",params:[-1,1]},populationSize:150,generations:100,fitnessFunction:"XOR",targetFitness:.95,survivalRate:.2,numOfElite:10,populationStagnationLimit:20,interspeciesMatingRate:.001,mutateOnlyProb:.25,c1:1,c2:1,c3:.4,compatibilityThreshold:3,dropOffAge:15,mutationRate:1,weightMutationRate:.8,addConnectionMutationRate:.05,addNodeMutationRate:.03,reinitializeWeightRate:.1,minPerturb:-.5,maxPerturb:.5,keepDisabledOnCrossOverRate:.75,...e};Object.keys(t).forEach((e=>{this[e]=t[e]})),this.initActivationFunction(),this.initWeightInitialization(),this.initFitnessFunction()}initActivationFunction(){if("string"==typeof this.activationFunction){if(!u[this.activationFunction])throw new Error(`Unknown activation function: ${this.activationFunction}`);this.activationFunction=new u[this.activationFunction]}}initWeightInitialization(){if("object"==typeof this.weightInitialization&&this.weightInitialization.type){const{type:e,params:t=[]}=this.weightInitialization;if(!p[e])throw new Error(`Unknown weight initialization: ${e}`);this.weightInitialization=new p[e](...t)}}initFitnessFunction(){if("string"==typeof this.fitnessFunction){if(!l[this.fitnessFunction])throw new Error(`Unknown fitness function: ${this.fitnessFunction}`);this.fitnessFunction=new l[this.fitnessFunction]}}}},729:(e,t,n)=>{const i=n(36),o=n(589);e.exports=class extends i{constructor(e,t){super(e,t),this.outgoingConnections=[],this.nodeType=o.INPUT}feedInput(e){this.activate(e)}activate(e){for(const t of this.outgoingConnections)t.feedForward(e),this.lastOutput=e}calculateExpectedInputs(){for(const e of this.outgoingConnections)e.enabled&&!e.recurrent&&e.forwardExpectedInput()}addOutgoingConnection(e){this.outgoingConnections.push(e)}acceptsOutgoingConnections(){return!0}}},797:e=>{e.exports=class{constructor(e,t){this.id=e,this.nodeType=t}}},804:(e,t,n)=>{const i=n(36),o=n(856),s=n(589);e.exports=class extends i{constructor(e,t){super(e,t),this.nodeType=s.OUTPUT,this.activationFunction=t.activationFunction,this.incomingConnections=[],this.inComingRecurrentConnections=[],this.outgoingConnections=[],this.biasConnection=null,this.inputs=[],this.numInputsReceived=0}feedInput(e){this.inputs.push(e),this.receivedInputs++,this.receivedInputs===this.expectedInputs&&this.activate(this.inputs)}activate(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];for(const e of this.inComingRecurrentConnections)e.enabled&&(t+=e.inNode.lastOutput*e.weight);switch(this.config.biasMode){case"WEIGHTED_NODE":null!==this.biasConnection&&this.biasConnection.enabled&&(t+=this.biasConnection.weight*this.biasConnection.inNode.bias);break;case"DIRECT_NODE":null!==this.biasConnection&&this.biasConnection.enabled&&(t+=this.biasConnection.inNode.bias);break;case"CONSTANT":t+=this.config.bias}this.lastOutput=this.activationFunction.apply(t),this.inputs=[],this.receivedInputs=0}forwardExpectedInput(){this.expectedInputs++}addIncomingConnection(e){this.incomingConnections.push(e),e.recurrent&&this.inComingRecurrentConnections.push(e),e.inNode instanceof o&&(this.biasConnection=e)}addOutgoingConnection(e){this.outgoingConnections.push(e)}acceptsIncomingConnections(){return!0}acceptsOutgoingConnections(){return!1}}},846:(e,t,n)=>{const i=n(117);e.exports=class extends i{constructor(e=0,t=1){super(),this.center=e,this.width=t}apply(e){return Math.exp(-Math.pow((e-this.center)/this.width,2))}}},856:(e,t,n)=>{const i=n(36),o=n(589);e.exports=class extends i{constructor(e,t){super(e,t),this.nodeType=o.BIAS,this.bias=t.bias,this.lastOutput=this.bias,this.outgoingConnections=[]}activate(e){throw new Error("Bias node cannot be activated")}feedInput(e){throw new Error("Bias node does not have any input")}addOutgoingConnection(e){this.outgoingConnections.push(e)}acceptsOutgoingConnections(){return!0}}},871:(e,t,n)=>{const i=n(117);e.exports=class extends i{apply(e){return Math.max(0,e)}}},897:e=>{e.exports=class{initializeWeight(){throw new Error("initializeWeight() must be implemented by subclass")}initializeWeights(e){throw new Error("initializeWeights() must be implemented by subclass")}}},904:(e,t,n)=>{const i=n(349),o=n(804);e.exports=class{constructor(e,t,n,i,o,s,a){this.inNode=e,this.outNode=t,this.weight=n,this.enabled=i,this.innovationNumber=o,this.recurrent=s,this.config=a,this.forwardedExpectedInput=!1,e.addOutgoingConnection(this),t.addIncomingConnection(this)}feedForward(e){this.enabled&&!this.recurrent&&this.outNode.feedInput(e*this.weight)}forwardExpectedInput(){this.forwardedExpectedInput||((this.outNode instanceof i||this.outNode instanceof o)&&this.outNode.forwardExpectedInput(),this.forwardedExpectedInput=!0)}reinitializeWeight(){this.weight=this.config.weightInitialization.initializeWeight()}}}},t={},function n(i){var o=t[i];if(void 0!==o)return o.exports;var s=t[i]={exports:{}};return e[i](s,s.exports,n),s.exports}(44);var e,t}));